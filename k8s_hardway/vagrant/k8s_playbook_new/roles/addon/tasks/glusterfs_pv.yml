---


- name: copy yaml to remote
  copy: src=glusterfs_hekti dest=/tmp
  tags:
    - glusterfs_install_pkg

- block:
  - name: set nodes param
    register: nodes
    set_fact:
        node:
          hostnames: 
            manage:
              - "{{item.key}}"
            storage:
              - "{{item.value.ip}}"
          zone: 1
        devices:
        - name: "{{glusterfs_disk}}"
          destroydata: false
    with_dict: "{{hostvars}}"
  - name: set clusters param
    set_fact:
      param:
        clusters:
        - nodes: "{{ nodes.results|json_query('[*].ansible_facts')|list }}"
  - debug: var=param.clusters

- name: write param to topology.json file
  copy: 
    content: "{{ param | to_nice_json }}" 
    dest: "/tmp/glusterfs_hekti/topology.json"


- block:
  - name: apply glusterfs and heketi deployment
    register: glusterfs_heketi_apply
    shell: 'sh apply.sh'
    args:
      chdir: /tmp/glusterfs_hekti/
  - debug: var=glusterfs_heketi_apply.stdout_lines
  tags:
    - glusterfs_heketi_apply


- block:
  - import_tasks: get_svc_ip.yml
  - wait_for: port=80 host="{{svc_ip.stdout}}" delay=6 timeout=20
  - name: use heketi to init glusterfs
    register: heketi_init
    shell: 'sh init.sh'
    args:
      chdir: /tmp/glusterfs_hekti/
  - debug: var=heketi_init.stdout_lines
  tags:
    - heketi_init

- block:
  - name: glusterfs healthy check
    register: glusterfs_check
    shell: 'sh check.sh'
    args:
      chdir: /tmp/glusterfs_hekti/
  - debug: var=glusterfs_check.stdout_lines
  tags:
    - glusterfs_check
