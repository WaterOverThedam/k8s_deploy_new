# -*- mode: ruby -*-
# vi: set ft=ruby :

NODES = 3
DISKS = 2
DISKS_SIZE=10
CACHE = true
USE_PROXY = true
DISK_DIR = "./volumes"
LIBVIRT_DISK_CACHE = "default"
NETWORK_IP_PREFIX = "192.168.0.6"
SETTINGS = {}
SETTINGS['ssh_path'] = "~/.ssh"
SETTINGS['authorize'] = "#{SETTINGS['ssh_path']}/id_rsa.pub"
SETTINGS['key'] = "#{SETTINGS['ssh_path']}/id_rsa"


Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    config.ssh.username = "vagrant"
    config.vm.box = "centos/7"
    config.vm.box_url = "https://app.vagrantup.com/centos/7"
    config.vm.box_version = "2004.01"
    config.vm.box_check_update = false
    config.vbguest.auto_update = false
    #config.vm.synced_folder '/Users/tonywu/Downloads', '/home/vagrant/sync', type: "nfs", linux__nfs_options: ['rw','no_subtree_check','all_squash','async']

    if SETTINGS.include? 'authorize'
        if File.exist? File.expand_path(SETTINGS['authorize'])
          config.vm.provision 'shell' do |s|
            s.inline = "echo $1 | grep -xq \"$1\" /home/vagrant/.ssh/authorized_keys || echo \"\n$1\" | tee -a /home/vagrant/.ssh/authorized_keys;"
            s.args = [File.read(File.expand_path(SETTINGS['authorize']))]
          end
        end
    end
    if SETTINGS.include? 'key'
        if File.exist? File.expand_path(SETTINGS['key'])
            config.vm.provision 'shell' do |s|
              s.privileged = false
              s.inline = "echo \"$1\" > /home/vagrant/.ssh/$2 && chmod 600 /home/vagrant/.ssh/$2"
              s.args = [File.read(File.expand_path(SETTINGS['key'])), SETTINGS['key'].split('/').last]
            end
        end
    end
 
    config.vm.synced_folder ".", "/vagrant", disabled: true
    #config.vm.synced_folder "files/k8s_demo", "/home/vagrant/k8s_demo",create: true, type: "rsync", rsync__args: ['--verbose', '--archive', '--delete', '-z']
  
    # disable usb
    config.vm.provider "virtualbox" do |vb|
      # VM Customizations go here
      vb.customize ["modifyvm", :id, "--usb", "off"]
      vb.customize ["modifyvm", :id, "--usbehci", "off"]
    end


    $script = <<-'SCRIPT'
    scp -r  /home/vagrant/.ssh /root/
    sed -i '/PasswordAuthentication/s/no/yes/g' /etc/ssh/sshd_config; systemctl restart sshd
    SCRIPT
    config.vm.provision "config",type: "shell", inline: $script
    #config.vm.provision "tunning",type: "shell", path: "k8s-host_tunning.sh",privileged: true

    
    NO_PROXY=(0..NODES-1).map {|j| "#{NETWORK_IP_PREFIX}#{j}"}
    NO_PROXY.push("127.0.0.1","localhost","myharbor.com")
    PORXY="http://192.168.0.112:7890"

    (1..NODES).each do |i|
        config.vm.define "hw-node#{i}" do |node|
            node.vm.hostname = "hw-node#{i}"
            node.vm.network "public_network", ip: "#{NETWORK_IP_PREFIX}#{i}",bridge: "en0: 以太网"
            node.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", disabled: true
            node.vm.network :forwarded_port, guest: 22, host: "225#{i}", auto_correct: true
            # 全局代理影响太大,故取消；改在containerd服务配置使用代理
            # if Vagrant.has_plugin?("vagrant-proxyconf")
            #     node.proxy.http     = ENV['HTTP_PROXY'] || ENV['http_proxy'] || "http://192.168.0.112:7890"
            #     node.proxy.https    = ENV['HTTPS_PROXY'] || ENV['https_proxy'] ||  "http://192.168.0.112:7890"
            #     node.proxy.no_proxy = ENV['NO_PROXY'] || ENV['no_proxy'] || "#{NO_PROXY.join(',')}"
            # end
            # Settings for Virtualbox
            # 每个node执行一次
            node.vm.provider :virtualbox do |vb|
                unless File.exist?("#{DISK_DIR}/hw-disk-#{i}-0.vdi")
                    #vb.customize ["storagectl", :id,"--name", "VboxSata", "--remove"]
                    vb.customize ["storagectl", :id,"--name", "VboxSata", "--add", "sata"]
                end
            end
            # 每个disk执行一次
            # To make the glusterfs cluster, each with DISKS number of drives
            (0..DISKS-1).each do |d|
                node.vm.provider :virtualbox do |vb|
                    unless File.exist?("#{DISK_DIR}/hw-disk-#{i}-#{d}.vdi")
                       vb.customize [ "createmedium", "--filename", "#{DISK_DIR}/hw-disk-#{i}-#{d}.vdi", "--size", 1024*DISKS_SIZE]
                    end
                    vb.customize [ "storageattach", :id, "--storagectl", "VboxSata", "--port", 3+d, "--device", 0, "--type", "hdd", "--medium", "#{DISK_DIR}/hw-disk-#{i}-#{d}.vdi" ]  
                    vb.memory = 6144
                    vb.cpus = 2
                end
            end
            if i == 1 
               ops.vm.provision :ansible do |ansible|
                    ansible.verbose = true
                    ansible.limit = "all"
                    ansible.raw_arguments  = [
                    # "-t limit_remove", 
                    #  "-v"
                    ]       
                    ansible.playbook = "k8s_playbook_new/cluster.yml"
                    ansible.groups = {
                        "ops" => ["hw_ops"],
                        "nodes" => (0..NODES-1).map {|j| "hw_node#{j}"},
                    }
                    ansible.extra_vars = {
                        "http_proxy"  => PORXY,
                        "no_proxy" => NO_PROXY,
                        "use_proxy" => USE_PROXY,
                        "vagrant_cache" => ENV['VAGRANT_CACHE'] ? ENV['VAGRANT_CACHE'] : CACHE,
                        "ntp_server"  => "192.168.0.14"
                        "myharbor_server" => "192.168.0.14"
                   }
               end
            end
        end
    end
end
 