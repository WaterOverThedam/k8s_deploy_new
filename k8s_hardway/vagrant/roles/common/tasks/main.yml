- name: restart network
  systemd:
    state: restarted
    service: network
  when: ansible_eth1.ipv4 is not defined

- name: refresh inventory
  setup:
  when: ansible_eth1.ipv4 is not defined

- block:
  # setup standard repos
  - name: install centos and epel repos
    yum:
      name: 
        - epel-release
        - centos-release-gluster
        - python36
        - python36-pip
        - git
      state: present
    tags: repo
  - name: install base packages
    yum:
      name: "{{ install_pkgs }}"
      state: present
      disable_gpg_check: yes
      update_cache: yes
    tags: pkg
  tags: yum

- block:  
    - name: set timezone to Asia/Shanghai
      timezone:
        name: Asia/Shanghai
      tags: timezone
    - name: cron for sync time
      cron:
        name: "synchronization time"
        job: "/usr/sbin/ntpdate {{ ntp_server }}"
        minute: "*/5"
        state: present
      when: ntp_server is defined  
      tags: ['sync_time','crond']
  tags: time

- block:
    - name: create root's .ssh dir
      file: path=/root/.ssh state=directory mode=0600
    - name: copy key files to .ssh
      copy: src="{{vagrant_ssh_source}}/{{item.src}}" dest="/root/.ssh/{{item.dest}}" mode=0600
      loop:
        - {src: id_rsa, dest: id_rsa }
        - {src: id_rsa.pub, dest: authorized_keys }
  when: vagrant_ssh_source is defined
  tags: ['root_key']

- name: build hosts file
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_eth1.ipv4.address }} {{item}}" state=present
  when: hostvars[item].ansible_eth1.ipv4.address is defined
  with_items: "{{ groups['all'] }}"

- name: hosts dns for docker repo
  lineinfile:
    path: /etc/hosts
    state: present
    line: "{{custom_registry}} k8s.gcr.io"
  when: custom_registry is defined

- name: disable selinux
  selinux: state=disabled
    
- name: Does cache exist?
  local_action: stat path="{{ vagrant_home }}/cache/{{ ansible_distribution }}/{{ ansible_distribution_version }}/yum.tgz"
  become: no
  register: cache_exists

- name: Copy cache from host
  unarchive:
    src: "{{ vagrant_home }}/cache/{{ ansible_distribution }}/{{ ansible_distribution_version }}/yum.tgz"
    dest: "/var/cache/"
  when:
    - cache_exists.stat.exists == True
    - vagrant_cache

- name: Keep yum cache
  shell: yum-config-manager --setopt 'keepcache=1' --save > /dev/null
  when:
    - vagrant_cache

- name: customize hosts file
  lineinfile: dest=/etc/hosts line="{{ item.addr }} {{ item.names | join(\" \") }}"
  when: custom_host_aliases is defined
  with_items: "{{ custom_host_aliases | default(omit) }}"

# kubeadm 1.8+ does not like swap

- name: Ensure net.bridge.bridge-nf-call-iptables is set. See kubeadm
  copy: src=k8s.conf owner=root group=root dest=/etc/sysctl.d/k8s.conf

- name: swap and limit_remove config
  block:
    - name: swap off
      shell: |
        swapoff -a && free â€“h
        sed '/swap/s/^/#/'  /etc/fstab  -i
        iptables -F && iptables -X && iptables -F -t nat && iptables -X -t nat && iptables -P FORWARD ACCEPT
    - name: firewalld off
      systemd: name=firewalld state=stopped enabled=no
    - name: dnsmasq removed
      yum: name=dnsmasq state=absent
  tags: ['swap','limit_remove']

- name: restart server
  shell: 'sleep 1 && shutdown -r now "Reboot triggered by Ansible" && sleep 1'
  async: 4
  poll: 0
  ignore_errors: true
  tags: os_restart

- name: wait for server to come back
  become: no
  wait_for:
    port: 22
    host: '{{ ansible_ssh_host|default(inventory_hostname) }}'
    search_regex: OpenSSH
    delay: 10
  connection: local
  tags: os_restart